//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ParserRules.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ParserRulesParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface IParserRulesListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] ParserRulesParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] ParserRulesParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefinition([NotNull] ParserRulesParser.DefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefinition([NotNull] ParserRulesParser.DefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.structDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructDefinition([NotNull] ParserRulesParser.StructDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.structDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructDefinition([NotNull] ParserRulesParser.StructDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.enumerableDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerableDefinition([NotNull] ParserRulesParser.EnumerableDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.enumerableDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerableDefinition([NotNull] ParserRulesParser.EnumerableDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] ParserRulesParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] ParserRulesParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] ParserRulesParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] ParserRulesParser.VariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.arrayDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayDeclaration([NotNull] ParserRulesParser.ArrayDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.arrayDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayDeclaration([NotNull] ParserRulesParser.ArrayDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.arrayAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAssignment([NotNull] ParserRulesParser.ArrayAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.arrayAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAssignment([NotNull] ParserRulesParser.ArrayAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] ParserRulesParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] ParserRulesParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] ParserRulesParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] ParserRulesParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] ParserRulesParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] ParserRulesParser.ExpressionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] ParserRulesParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] ParserRulesParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] ParserRulesParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] ParserRulesParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.doWhileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoWhileStatement([NotNull] ParserRulesParser.DoWhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.doWhileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoWhileStatement([NotNull] ParserRulesParser.DoWhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] ParserRulesParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] ParserRulesParser.SwitchStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase([NotNull] ParserRulesParser.CaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase([NotNull] ParserRulesParser.CaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] ParserRulesParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] ParserRulesParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatement([NotNull] ParserRulesParser.BreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatement([NotNull] ParserRulesParser.BreakStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueStatement([NotNull] ParserRulesParser.ContinueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueStatement([NotNull] ParserRulesParser.ContinueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] ParserRulesParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] ParserRulesParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.ternary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTernary([NotNull] ParserRulesParser.TernaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.ternary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTernary([NotNull] ParserRulesParser.TernaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.binary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinary([NotNull] ParserRulesParser.BinaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.binary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinary([NotNull] ParserRulesParser.BinaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary([NotNull] ParserRulesParser.PrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary([NotNull] ParserRulesParser.PrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.unary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary([NotNull] ParserRulesParser.UnaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.unary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary([NotNull] ParserRulesParser.UnaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.grouping"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrouping([NotNull] ParserRulesParser.GroupingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.grouping"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrouping([NotNull] ParserRulesParser.GroupingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAccess([NotNull] ParserRulesParser.ArrayAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAccess([NotNull] ParserRulesParser.ArrayAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall([NotNull] ParserRulesParser.CallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall([NotNull] ParserRulesParser.CallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.typeCast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeCast([NotNull] ParserRulesParser.TypeCastContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.typeCast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeCast([NotNull] ParserRulesParser.TypeCastContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] ParserRulesParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] ParserRulesParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserRulesParser.fieldAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldAccess([NotNull] ParserRulesParser.FieldAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserRulesParser.fieldAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldAccess([NotNull] ParserRulesParser.FieldAccessContext context);
}
